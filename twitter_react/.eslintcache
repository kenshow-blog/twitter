[{"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/index.tsx":"1","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/serviceWorker.ts":"2","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/app/store.ts":"3","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/App.tsx":"4","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/counter/counterSlice.ts":"5","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/auth/authSlice.ts":"6","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/core/Core.tsx":"7","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/auth/Auth.tsx":"8","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/media/mediaSlice.ts":"9","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/media/Media.tsx":"10","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/core/Home.tsx":"11","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/media/MediaDetail.tsx":"12","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/media/DeleteDialog.tsx":"13"},{"size":679,"mtime":1613794347927,"results":"14","hashOfConfig":"15"},{"size":5424,"mtime":1612359838294,"results":"16","hashOfConfig":"15"},{"size":627,"mtime":1613222143519,"results":"17","hashOfConfig":"15"},{"size":223,"mtime":1613809659166,"results":"18","hashOfConfig":"15"},{"size":1851,"mtime":1612359838290,"results":"19","hashOfConfig":"15"},{"size":2891,"mtime":1612666999331,"results":"20","hashOfConfig":"15"},{"size":3522,"mtime":1613792640785,"results":"21","hashOfConfig":"15"},{"size":12883,"mtime":1612447135097,"results":"22","hashOfConfig":"15"},{"size":5003,"mtime":1613791254501,"results":"23","hashOfConfig":"15"},{"size":5475,"mtime":1613834449709,"results":"24","hashOfConfig":"15"},{"size":655,"mtime":1613809617840,"results":"25","hashOfConfig":"15"},{"size":2937,"mtime":1613739504176,"results":"26","hashOfConfig":"15"},{"size":1152,"mtime":1613833729740,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"w0q3vy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/index.tsx",[],["57","58"],"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/serviceWorker.ts",[],"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/app/store.ts",[],"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/App.tsx",[],"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/counter/counterSlice.ts",[],"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/auth/authSlice.ts",[],"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/core/Core.tsx",[],"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/auth/Auth.tsx",[],"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/media/mediaSlice.ts",["59","60"],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport axios from \"axios\";\nimport { POST_IMAGE, PROPS_POST_IMAGE, PROPS_IMAGES } from \"../types\";\n\nconst apiUrl = process.env.REACT_APP_DEV_API_URL;\n\nexport const fetchAsyncGetPostedImage = createAsyncThunk(\n    \"media/getPostedImage\",\n    async () => {\n        const res = await axios.get(`${apiUrl}media_api/post/`, {\n            headers: {\n                Authorization: `JWT ${localStorage.localJWT}`,\n            },\n        });\n        return res.data;\n    }\n);\n\nexport const fetchAsyncGetImages = createAsyncThunk(\n    \"media/getImages\",\n    async () => {\n        const res = await axios.get(`${apiUrl}media_api/imageslist/`, {\n            headers: {\n                Authorization: `JWT ${localStorage.localJWT}`,\n            },\n        });\n        return res.data;\n    }\n)\nexport const fetchAsyncPostImage = createAsyncThunk(\n    \"media/postImage\",\n    async (scrName: POST_IMAGE) => {\n        const res = await axios.post(`${apiUrl}media_api/post/`, scrName, {\n            headers: {\n                Authorization: `JWT ${localStorage.localJWT}`,\n            },\n        });\n        return res.data;\n    }\n);\n\nexport const fetchAsyncPostImages = createAsyncThunk(\n    \"media/Images\",\n    async (scrName: POST_IMAGE) => {\n        // const uploadData = new FormData();\n        // uploadData.append(\"scrName\", scrName.scrName);\n        const res = await axios.post(`${apiUrl}media_api/images/`, scrName, {\n            headers: {\n                Authorization: `JWT ${localStorage.localJWT}`,\n            },\n        });\n        return res.data;\n    }\n);\n\nexport const fetcyAsyncDeletePostedImage = createAsyncThunk(\n    \"media/postedImage/delete\",\n    async (post_image: PROPS_POST_IMAGE) => {\n        const res = await axios.delete(\n            `${apiUrl}media_api/post/${post_image.id}/`, {\n                headers: {\n                    Authorization: `JWT ${localStorage.localJWT}`\n                }\n            }\n        );\n        return post_image.id;\n        \n    }\n);\n\nexport const fetcyAsyncDeleteImages = createAsyncThunk(\n    \"media/Images/delete\",\n    async (images: PROPS_IMAGES) => {\n        const res = await axios.delete(\n            `${apiUrl}media_api/imageslist/${images.id}/`, {\n                headers: {\n                    Authorization: `JWT ${localStorage.localJWT}`\n                }\n            }\n        );\n        return images;\n    }\n);\n\nexport const mediaSlice = createSlice({\n    name: \"media\",\n    initialState: {\n        isLoadingPostImage: false,\n\n        post_image: [\n            {\n               id: 0,\n               scrName: \"\",\n               userPost: 0,\n               created_on: \"\" \n            },\n        ],\n        images: [\n            {\n                id: 0,\n                userImg: 0,\n                imgs: \"\",\n                imgPost: 0,\n            }\n        ] \n    },\n    reducers: {\n        fetchPostImageStart(state) {\n            state.isLoadingPostImage = true;\n        },\n        fetchPostImageEnd(state) {\n            state.isLoadingPostImage = false;\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchAsyncGetPostedImage.fulfilled, (state, action) => {\n            return {\n                ...state,\n                post_image: action.payload\n            }\n        });\n        builder.addCase(fetchAsyncGetImages.fulfilled, (state, action) => {\n        return {\n            ...state,\n            images: action.payload\n            }\n        });\n        builder.addCase(fetchAsyncPostImage.fulfilled, (state, action) => {\n            return {\n                ...state,\n                post_image: [...state.post_image, action.payload],\n            }\n        });\n\n        // builder.addCase(fetchAsyncPostImages.fulfilled, (state, action) => {\n        //     return {\n        //         ...state,\n        //         images: [...state.images, action.payload]\n        //     }\n        // });\n        builder.addCase(fetcyAsyncDeletePostedImage.fulfilled, (state, action) => {\n            return {\n                ...state,\n                post_image: state.post_image.filter((p_image) => \n                    p_image.id !== action.payload\n                    \n                )\n                \n            }\n            \n        });\n        builder.addCase(fetcyAsyncDeleteImages.fulfilled, (state, action) => {\n            \n            return {\n                ...state,\n                images: state.images.filter((image) => \n                    image.id !== action.payload.id\n                )\n            }\n        });\n    },\n});\n\nexport const {\n    fetchPostImageStart,\n    fetchPostImageEnd\n} = mediaSlice.actions;\n\nexport const selectIsLoadingPostImage = (state: RootState) => state.media.isLoadingPostImage;\nexport const selectPostImage = (state: RootState) => state.media.post_image;\nexport const selectImages = (state: RootState) => state.media.images;\n\nexport default mediaSlice.reducer;\n","/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/media/Media.tsx",[],"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/core/Home.tsx",[],"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/media/MediaDetail.tsx",[],"/Users/tanakakenshou/Desktop/Twitter/twitter_react/src/features/media/DeleteDialog.tsx",["61"],"import React, {useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { PROPS_POST_IMAGE } from \"../types\";\n\nexport const DeleteDialog: React.FunctionComponent<\n    { msg: any, isOpen: any, doYes: any, doNo: any}\n    > = ({msg, isOpen, doYes, doNo}) => {\n\n  const [open, setOpen] = React.useState(false)\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  return (\n      <div>\n        <Dialog\n            open={open}\n            keepMounted\n            onClose={() => doNo()}\n            aria-labelledby=\"common-dialog-title\"\n            aria-describedby=\"common-dialog-description\"\n        >\n          <DialogContent>\n            {msg}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => doNo()} color=\"primary\">\n              No\n            </Button>\n            <Button onClick={() => doYes()} color=\"primary\">\n              Yes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n  )\n}",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":60,"column":15,"nodeType":"68","messageId":"69","endLine":60,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":75,"column":15,"nodeType":"68","messageId":"69","endLine":75,"endColumn":18},{"ruleId":"66","severity":1,"message":"70","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":26},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'PROPS_POST_IMAGE' is defined but never used.","no-global-assign","no-unsafe-negation"]